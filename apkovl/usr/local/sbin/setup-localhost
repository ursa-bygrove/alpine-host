#!/bin/sh -e

if [ $(id -u) -ne 0 ]; then
  echo "ERROR: This script can only be run by root!" >&2
  exit 1
fi

echo "Installing required packages ..."
apk update
apk add \
  curl \
  doas-sudo-shim \
  docker \
  docker-cli-compose \
  docs \
  drill \
  ip6tables \
  iptables \
  iproute2 \
  keychain \
  mandoc \
  patch \
  tmux

SERVICES="crond docker ip6tables iptables local"
export SSH_USER='dk'

# Load setup-alpine answers file
. /root/setup-vultr.answers

# Disable root login
passwd -l root || :

# Apply setup patches
echo
/root/apply-patches

# Enable 1st-boot servise
chmod 0755 /etc/local.d/1st-boot.start

# Include custom files when installing to disk
lbu add \
  /root/.exrc \
  /root/* \
  /usr/local

# Include patched files when installing to disk
for file in $(awk '$1=="+++" { print $2 }' /root/*.patch); do
  lbu add "${file}" "${file}."*
done

# Configure containerization service
if type -t docker > /dev/null; then
  echo
  echo 'Updating docker users ...'
  addgroup -S -g 450 dockremap
  adduser -SDH -u 450 -G dockremap dockremap
  adduser -SDH -u 451 -G docker docker

  echo
  echo 'Update docker daemon config ...'
  sed -i \
    -E "s/(\"userns-remap\"): \"default\"/\1 \"${SSH_USER}:docker\"/" \
    /etc/docker/daemon.json

  echo
  echo "Enabling cgroups v2 ..."
  sed -i -E 's/#(rc_cgroup_mode)=".*"/\1="unified"/' /etc/rc.conf
  SERVICES="${SERVICES} cgroups"
  /usr/local/sbin/setup-subids
fi

# Configure services started on boot
echo
echo "Starting local services ..."
for service in ${SERVICES}; do
  if rc-service --exists $service; then
    rc-update add $service default
  fi
done
unset service

echo
echo "Running setup-alpine ..."
/sbin/setup-alpine -e -f /root/setup-vultr.answers
