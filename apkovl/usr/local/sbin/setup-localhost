#!/bin/sh -e

if [ $(id -u) -ne 0 ]; then
  echo "ERROR: This script can only be run by root!" >&2
  exit 1
fi

echo "Installing required packages ..."
apk update
apk add \
  curl \
  doas-sudo-shim \
  docker \
  docker-cli-compose \
  docs \
  drill \
  ip6tables \
  iptables \
  iproute2 \
  keychain \
  mandoc \
  patch \
  tmux

SERVICES="crond docker ip6tables iptables local"

# Disable root login
passwd -l root || :

# Apply setup patches
echo
/root/apply-patches

# Include all patched files when installing
for file in $(awk '$1=="+++" { print $2 }' /root/*.patch); do
  lbu add "${file}" "${file}."*
done

# Include other files when installing
lbu add \
  /root/.exrc \
  /root/* \
  /usr/local

echo
echo "Running setup-alpine ..."
/sbin/setup-alpine -e -f /root/setup-vultr.answers

# Add production user
adduser -D -s /bin/ash live live

# Setup containerization services
if type -t docker > /dev/null; then
  addgroup live docker
  echo
  echo 'Enabling docker namespaces ... user: dockremap, group: dockremap'
  addgroup -S dockremap
  adduser -SDH -G dockremap dockremap
  echo
  echo "Enabling cgroups v2 ..."
  sed -i -E 's/#(rc_cgroup_mode)=".*"/\1="unified"/' /etc/rc.conf
  SERVICES="${SERVICES} cgroups"
  /usr/local/sbin/setup-subids
fi

# Initialise local services
echo
echo "Starting local services ..."
for service in ${SERVICES}; do
  if rc-service --exists $service; then
    rc-update add $service default
  fi
done
unset service
